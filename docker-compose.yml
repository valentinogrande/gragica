version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      TZ: ${MYSQL_TIMEZONE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-time-zone='${MYSQL_TIMEZONE}'

  backend:
    build:
      context: ./back
    container_name: ${BACKEND_CONTAINER_NAME}
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT}:8080"
    depends_on:
      - mysql
    environment:
      DATABASE_URL: ${DATABASE_URL}
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_CONTAINER_NAME: ${BACKEND_CONTAINER_NAME}
      BASE_URL: ${BASE_URL}
      BASE_PATH: ${BASE_PATH}
      PLATFORM_NAME: ${PLATFORM_NAME}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}

    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8080/api/v1/health/"]
      interval: 60s
      timeout: 3s
      retries: 10
    volumes:
      - shared_output:/shared

  init:
    build:
      context: ./init
    container_name: init-script
    depends_on:
      backend:
        condition: service_healthy
    command: ["python3", "create_database.py", "create_all"]
    restart: "no"
    volumes:
      - shared_output:/shared

  frontend:
    build:
      context: ./front
    container_name: ${FRONTEND_CONTAINER_NAME}
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}

volumes:
  mysql_data:
  shared_output:

